{"ast":null,"code":"var _jsxFileName = \"/home/j/Documentos/GitHub/Treinamento-TDD-React/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Conta from './conta/Conta';\nimport Transacoes from './transacoes/Transacoes';\nimport api from './api';\nimport './App.css';\nexport const calcularNovoSaldo = (valores, saldo) => {\n  if (valores.transacao === 'deposito') {\n    return saldo + parseInt(valores.valor);\n  } else {\n    return saldo - parseInt(valores.valor);\n  }\n};\n\nfunction App() {\n  const [saldo, atualizarSaldo] = useState(1000);\n  const [transacoes, atualizarTransacoes] = useState([]);\n\n  async function carregarTransacoes() {\n    const transacoes = await api.listaTransacoes();\n    atualizarTransacoes(transacoes);\n  }\n\n  async function obterSaldo() {\n    atualizarSaldo(await api.buscaSaldo());\n  }\n\n  function realizarTransacao(valores) {\n    const novoSaldo = calcularNovoSaldo(valores, saldo);\n    api.atualizaSaldo(novoSaldo).catch(error => console.error(error));\n    api.atualizaTransacoes(valores).catch(error => console.error(error));\n    atualizarSaldo(novoSaldo);\n    atualizarTransacoes([valores]);\n  }\n\n  useEffect(() => {\n    obterSaldo();\n    carregarTransacoes();\n  }, [saldo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"ByteBank\")), /*#__PURE__*/React.createElement(Conta, {\n    saldo: saldo,\n    realizarTransacao: realizarTransacao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Transacoes, {\n    transacoes: transacoes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/j/Documentos/GitHub/Treinamento-TDD-React/src/App.js"],"names":["React","useEffect","useState","Conta","Transacoes","api","calcularNovoSaldo","valores","saldo","transacao","parseInt","valor","App","atualizarSaldo","transacoes","atualizarTransacoes","carregarTransacoes","listaTransacoes","obterSaldo","buscaSaldo","realizarTransacao","novoSaldo","atualizaSaldo","catch","error","console","atualizaTransacoes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,WAAP;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACnD,MAAID,OAAO,CAACE,SAAR,KAAsB,UAA1B,EAAsC;AACpC,WAAOD,KAAK,GAAGE,QAAQ,CAACH,OAAO,CAACI,KAAT,CAAvB;AACD,GAFD,MAEO;AACL,WAAOH,KAAK,GAAGE,QAAQ,CAACH,OAAO,CAACI,KAAT,CAAvB;AACD;AACF,CANM;;AAQP,SAASC,GAAT,GAAe;AACb,QAAM,CAACJ,KAAD,EAAQK,cAAR,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,UAAD,EAAaC,mBAAb,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;;AAEA,iBAAec,kBAAf,GAAoC;AAClC,UAAMF,UAAU,GAAG,MAAMT,GAAG,CAACY,eAAJ,EAAzB;AACAF,IAAAA,mBAAmB,CAACD,UAAD,CAAnB;AACD;;AAED,iBAAeI,UAAf,GAA4B;AAC1BL,IAAAA,cAAc,CAAC,MAAMR,GAAG,CAACc,UAAJ,EAAP,CAAd;AACD;;AAED,WAASC,iBAAT,CAA2Bb,OAA3B,EAAoC;AAClC,UAAMc,SAAS,GAAGf,iBAAiB,CAACC,OAAD,EAAUC,KAAV,CAAnC;AAEAH,IAAAA,GAAG,CAACiB,aAAJ,CAAkBD,SAAlB,EAA6BE,KAA7B,CAAoCC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAA9C;AACAnB,IAAAA,GAAG,CAACqB,kBAAJ,CAAuBnB,OAAvB,EAAgCgB,KAAhC,CAAuCC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAjD;AAEAX,IAAAA,cAAc,CAACQ,SAAD,CAAd;AACAN,IAAAA,mBAAmB,CAAC,CAACR,OAAD,CAAD,CAAnB;AACD;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,UAAU;AACVF,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,CAACR,KAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,iBAAiB,EAAEY,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEN,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Conta from './conta/Conta';\nimport Transacoes from './transacoes/Transacoes';\nimport api from './api';\n\nimport './App.css';\n\nexport const calcularNovoSaldo = (valores, saldo) => {\n  if (valores.transacao === 'deposito') {\n    return saldo + parseInt(valores.valor)\n  } else {\n    return saldo - parseInt(valores.valor);\n  }\n}\n\nfunction App() {\n  const [saldo, atualizarSaldo] = useState(1000);\n  const [transacoes, atualizarTransacoes] = useState([]);\n\n  async function carregarTransacoes() {\n    const transacoes = await api.listaTransacoes();\n    atualizarTransacoes(transacoes);\n  }\n\n  async function obterSaldo() {\n    atualizarSaldo(await api.buscaSaldo());\n  }\n\n  function realizarTransacao(valores) {  \n    const novoSaldo = calcularNovoSaldo(valores, saldo);\n\n    api.atualizaSaldo(novoSaldo).catch((error) => console.error(error))\n    api.atualizaTransacoes(valores).catch((error) => console.error(error))\n    \n    atualizarSaldo(novoSaldo);\n    atualizarTransacoes([valores]);\n  }\n\n  useEffect(() => {\n    obterSaldo();\n    carregarTransacoes();\n  }, [saldo])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ByteBank</h1>\n      </header>\n\n      <Conta saldo={saldo} realizarTransacao={realizarTransacao}/>\n      <Transacoes transacoes={transacoes} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}